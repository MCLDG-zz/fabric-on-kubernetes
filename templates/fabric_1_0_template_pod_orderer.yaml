---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: $artifactsName
spec:
  capacity:
    storage: 500Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4.1
    - rsize=1048576
    - wsize=1048576
    - hard
    - timeo=600
    - retrans=2
  nfs:
    server: fs-bb629dc2.efs.us-east-2.amazonaws.com
    path: /channel-artifacts
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: $namespace
  name: $artifactsName
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 10Mi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: $namespace
  name: $podName
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: hyperledger
        role: orderer
        org: $namespace
        orderer-id: $ordererID
    spec:
      containers:
      - name: $podName
        image: hyperledger/fabric-orderer:x86_64-1.1.0-rc1
        env:
        - name: ORDERER_GENERAL_LOGLEVEL
          value: debug
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /var/hyperledger/orderer/orderer.genesis.block
        - name: ORDERER_GENERAL_LOCALMSPID
          value: $localMSPID
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /var/hyperledger/orderer/msp
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "false"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: /var/hyperledger/orderer/tls/server.key
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: /var/hyperledger/orderer/tls/server.crt
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: '[/var/hyperledger/orderer/tls/ca.crt]'
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        ports:
         - containerPort: 7050
        command: ["orderer"]
        volumeMounts:
         - mountPath: /var/hyperledger/orderer/msp 
           name: certificate
           #subPath: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp
           subPath: $mspPath
         - mountPath: /var/hyperledger/orderer/tls
           name: certificate
           #subPath: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/
           subPath: $tlsPath
         - mountPath: /var/hyperledger/orderer/orderer.genesis.block
           name: artifacts
           subPath: genesis.block
      volumes:
       - name: certificate
         persistentVolumeClaim:
             claimName: $pvName
       - name: artifacts
         persistentVolumeClaim:
             claimName: $artifactsName

---
apiVersion: v1
kind: Service
metadata:
  name: $ordererID
  namespace: $namespace
spec:
 selector:
   app: hyperledger
   role: orderer
   orderer-id: $ordererID
   org: $namespace
 type: NodePort
 ports:
   - name: listen-endpoint
     protocol: TCP
     port: 7050
     targetPort: 7050
     nodePort: $nodePort

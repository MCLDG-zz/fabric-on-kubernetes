---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: $artifactsName
  labels:
    pv-name: $artifactsName
spec:
  capacity:
    storage: 500Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4.1
    - rsize=1048576
    - wsize=1048576
    - hard
    - timeo=600
    - retrans=2
  nfs:
    server: $efsserver
    path: /channel-artifacts
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: $namespace
  name: $artifactsName
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  selector:
    matchLabels:
      pv-name: $artifactsName
  resources:
    requests:
      storage: 10Mi

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
   namespace: $namespace
   name: $name
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
       app: cli
    spec:
      containers:
        - name: $name
          image:  hyperledger/fabric-tools:x86_64-1.1.0-rc1
          env:
          
          - name: CORE_PEER_TLS_ENABLED
            value: "false"
          - name: CORE_VM_ENDPOINT
            value: unix:///host/var/run/docker.sock
          - name: GOPATH
            value: /opt/gopath
          - name: CORE_LOGGING_LEVEL
            value: DEBUG
          - name: CORE_PEER_ID
            value: $name
          - name: CORE_PEER_ADDRESS
            value: $peerAddress
          - name: CORE_PEER_LOCALMSPID
            value: $mspid
          - name: CORE_PEER_MSPCONFIGPATH
            value: /etc/hyperledger/fabric/msp
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
          command: [ "/bin/bash", "-c", "--" ]
          args: [ "while true; do sleep 30; done;" ]
          volumeMounts:
           - mountPath: /host/var/run/
             name: run
           - mountPath: /etc/hyperledger/fabric/msp
             name: certificate
             subPath: $mspPath
           - mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
             name: artifacts
      volumes:
        - name: certificate
          persistentVolumeClaim:
              claimName: $pvName
        - name: artifacts
          persistentVolumeClaim:
              claimName: $artifactsName
        - name: run
          hostPath:
              path: /var/run